package main

import "fmt"

//bill 结构体定义了一个账单，包含客户名称、商品项及其价格，以及小费
type bill struct {
	name  string
	items map[string]float64
	tip   float64
}

// NewBill 函数用于创建一个新的 bill 实例
func newbill(name string) bill {
	b := bill{
		name:  name,
		items: map[string]float64{},
		tip:   0,
	}
	return b
}

//Format 方法生成并返回一个格式化的账单字符串，包括商品项和总金额（包括小费）
func (b bill) format() string {
	fs := "bill breakdown: \n"
	var total float64 = 0
	//list items
	for k, v := range b.items {
		fs += fmt.Sprintf("%v ...$%v \n", k+":", v)
		total += v
	}
	//add to total
	total += b.tip
	//total
	fs += fmt.Sprintf("%v ...$%.2f \n", "total:", total)

	return fs
}

func (b *bill) updateTip(tip float64) {
	b.tip = tip
}

func (b bill) addItem(name string, price float64) {
	b.items[name] = price
}
